#Дата время
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'time_date'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
      - 'beat'

###Средняя влажность
  - platform: template
    sensors:
      average_humidity:
        friendly_name: "Средняя влажность"
        unit_of_measurement: "%"
        value_template: >
          {% set bedroom = states('sensor.0xa4c1382f021b16a1_humidity') | float(default=0) %}
          {% set kitchen = states('sensor.0xa4c13836353c3b70_humidity') | float(default=0) %}
          {% set vannoi = states('sensor.klimat_v_vannoi_humidity') | float(default=0) %}
          {{ ((bedroom + kitchen) / 1.8) | round(0) }}

#Ресурсы
#  - platform: systemmonitor
#    resources:
#    - type: processor_use
#    - type: disk_use_percent
#      arg: /
#    - type: memory_use_percent
#    - type: last_boot
#    - type: disk_free
#      arg: /

        
# Создаём сенсор счётчик прошедшего времени с момента последнего обновления данных Ватериусом
# Используем время последнего обновления показаний холодной воды, так как этот сенсор обновляется
# чаще, чем все остальные
  - platform: template
    sensors:
      waterius_last_seen:
        friendly_name: 'Ватериус вне сети'
        value_template: >
          {{(as_timestamp(now())-as_timestamp(states.sensor.cold_water.last_updated))|int}}
        unit_of_measurement: "сек."
        
        
        
###Сенсор радиации
  - platform: template
    sensors:
      radiation_level_home:
        friendly_name: "Уровень радиации"
        unique_id: radioactive
        unit_of_measurement: "µR/h"
        value_template: "{{ (states('sensor.radiation')|float(default=0.1) * 100)|round(2) }}"

###Меняем значение сенсоров на свое        
  - platform: template
    sensors:
      entrance_taburet_status:
        friendly_name: "Табурет"
        unique_id: taburet
        value_template: >
          {% if is_state('binary_sensor.0x00158d0002e2c1c7_contact', "on") %}Свободно
          {% elif is_state('binary_sensor.0x00158d0002e2c1c7_contact', "off") %}Занято
          {% else %}Unavailable
          {% endif %}
      entrance_kreslo_status:
        friendly_name: "Офисное кресло"
        unique_id: kreslo
        value_template: >
          {% if is_state('binary_sensor.0x00158d0003121c47_contact', "on") %}Свободно
          {% elif is_state('binary_sensor.0x00158d0003121c47_contact', "off") %}Занято
          {% else %}Unavailable
          {% endif %}