homeassistant:
  customize: !include_dir_merge_named includes/customize
  packages: !include_dir_merge_named includes/packages
# Whitelist Folders
  allowlist_external_dirs:
    - /config/tmp
  whitelist_external_dirs:
    - /config/tmp  
  
  
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

lovelace:
  mode: yaml
  resources:
    - url: /hacsfiles/vacuum-card/vacuum-card.js
      type: module
    - url: /hacsfiles/animated-consumption-card/animated-consumption-card.js
      type: module
    - url: /hacsfiles/mini-graph-card/mini-graph-card-bundle.js
      type: module
    - url: /hacsfiles/mini-media-player/mini-media-player-bundle.js?v=1.12.1
      type: module
    - url: /hacsfiles/mini-humidifier/mini-humidifier-bundle.js?v=2.5.4
      type: module
    - url: /hacsfiles/purifier-card/purifier-card.js
      type: module
    - url: /hacsfiles/lovelace-body-miscale-card/body-miscale-card.js
      type: module
      
# Text to speech
tts:
  - platform: google_translate

sonoff:
  username: !secret username_sonoff
  password: !secret password_sonoff
 
#device_tracker:
#  - platform: padavan_tracker
#    consider_home: 10
#    interval_seconds: 3
#    url: http://192.168.1.1/ # web interface url (don't forget about `/` in the end)
#    username: !secret username_padavan
#    password: !secret password_padavan
    
    

#Telegram
telegram_bot:
  - platform: polling
    api_key: !secret telegram_token
    parse_mode: html
    allowed_chat_ids:
      - !secret telegram_bot_chat_id

notify:
  - name: telegram
    platform: telegram
    chat_id: !secret telegram_bot_chat_id

#Narodmon
narodmon:
  devices:
    - name: "Narodmon"
      sensors:
        - radiation

mqtt: 
  sensor:
    - name: "Cold Water"
      unique_id: wateriuskcwm
      state_topic: "waterius/9772083/ch1"
      value_template: "{{ value }}"
      unit_of_measurement: "м3"
      icon: mdi:water
    - name: "Hot Water"
      unique_id: wateriuskhwm
      state_topic: "waterius/9772083/ch0"
      value_template: "{{ value }}"
      unit_of_measurement: "м3"
      icon: mdi:water
    - name: "Cold Day"
      unique_id: wateriuskcwd
      state_topic: "waterius/9772083/delta1"
      value_template: "{{ value }}"
      unit_of_measurement: "литр"
      icon: mdi:delta
    - name: "Hot Day"
      unique_id: wateriuskhwd
      state_topic: "waterius/9772083/delta0"
      value_template: "{{ value }}"
      unit_of_measurement: "литр"
      icon: mdi:delta
    - name: "Waterius Voltage"
      unique_id: wateriuskv
      state_topic: "waterius/9772083/voltage"
      value_template: "{{ value }}"
      unit_of_measurement: "V"
      icon: mdi:battery
# Создаём сенсор низкого напряжения питания Ватериуса, для последующего использования в автоматизациях
    - name: 'Waterius Voltage Low'
      unique_id: wateriuskvlow
      state_topic: 'waterius/9772083/voltage_low'
      value_template: > 
        {%if value == 1 %}
           'Низкое напряжение'
        {% else %}
           'Напряжение в порядке'
        {% endif %}

# Передаем показания счетчика электроэнергии в Ватериуса, для последующей передачи поставщику
rest_command:
  send_waterius_energy:
    url: https://uc.waterius.ru
    method: POST
    payload: '{"ch0": {{ states("sensor.energometr_energy_total") }}, "data_type0": 2, 
"key": "80079368485752160166374386507982"}'
    content_type: 'application/json'


# Пришлось вынести сюда после обновления command_line
#command_line:
#  - binary_sensor:
#      name: Workday isdayoff.ru
#      command: >-
#        curl https://isdayoff.ru/{{ now().date().strftime("%Y%m%d") }}
#      scan_interval: 600
#      payload_on: '0'
#      payload_off: '1'

#  - binary_sensor:
#      name: Workday isdayoff.ru Tomorrow
#      command: >-
#        curl https://isdayoff.ru/{{ (now().date() + timedelta(days=1)).strftime("%Y%m%d") }}
#      scan_interval: 600
#      payload_on: '0'
#      payload_off: '1'

#  - sensor:
#      name: CPU Temperature
#      command: 'cat /sys/class/thermal/thermal_zone0/temp'
#      scan_interval: 300
#      unit_of_measurement: "°C"
#      value_template: '{{ value | multiply(0.001) | round(2) }}'



#Вынос во внешние файлы
group: !include includes/groups.yaml
script: !include includes/scripts.yaml
scene: !include includes/scenes.yaml
recorder: !include includes/recorder.yaml
yeelight: !include includes/yeelight.yaml
timer: !include includes/timer.yaml

#Вынос во внешние папки
binary_sensor: !include_dir_merge_list includes/bi-sensor
sensor: !include_dir_merge_list includes/sensor
automation: !include_dir_merge_list includes/automation


   