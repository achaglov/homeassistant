#Дата время
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'time_date'
      - 'date_time_utc'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
      - 'beat'

###Средняя влажность
  - platform: template
    sensors:
      average_humidity:
        friendly_name: "Средняя влажность"
        unit_of_measurement: "%"
        value_template: >
          {% set bedroom = states('sensor.cgdk2_humidity') | float(default=0) %}
          {% set kitchen = states('sensor.atc_humidity') | float(default=0) %}
          {% set vannoi = states('sensor.klimat_v_vannoi_humidity') | float(default=0) %}
          {{ ((bedroom + kitchen) / 1.8) | round(0) }}

#Ресурсы
  - platform: systemmonitor
    resources:
    - type: processor_use
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: last_boot
    - type: disk_free
      arg: /


#Температура CPU        
  - platform: command_line
    scan_interval: 300
    name: CPU Temperature
    command: 'cat /sys/class/thermal/thermal_zone0/temp'
    #unit_of_measurement: '°C'
    #value_template: '{{ value | multiply(0.001) }}'
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(2) }}'
        
# Создаём сенсор счётчик прошедшего времени с момента последнего обновления данных Ватериусом
# Используем время последнего обновления показаний холодной воды, так как этот сенсор обновляется
# чаще, чем все остальные
  - platform: template
    sensors:
      waterius_last_seen:
        friendly_name: 'Ватериус вне сети'
        value_template: >
          {{(as_timestamp(now())-as_timestamp(states.sensor.cold_water.last_updated))|int}}
        unit_of_measurement: "сек."